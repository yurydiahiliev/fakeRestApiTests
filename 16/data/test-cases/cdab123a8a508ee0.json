{"uid":"cdab123a8a508ee0","name":"checkGetAuthorWithInvalidIdShouldReturn400(String) GET /Authors/$ → should return 400 Bad Request","fullName":"com.fakeRestApi.tests.author.GetAuthorsTests.checkGetAuthorWithInvalidIdShouldReturn400","historyId":"780f950c9b37a6468791a37bb03310a7","time":{"start":1759837993931,"stop":1759837994226,"duration":295},"description":"Verify GET /Authors/{id} returns 400 Bad Request for malformed IDs","descriptionHtml":"<p>Verify GET /Authors/{id} returns 400 Bad Request for malformed IDs</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"initApiClients","time":{"start":1759837990938,"stop":1759837990940,"duration":2},"status":"passed","steps":[{"name":"Initialize API clients","time":{"start":1759837990938,"stop":1759837990940,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"initAllAuthors","time":{"start":1759837990940,"stop":1759837991580,"duration":640},"status":"passed","steps":[],"attachments":[{"uid":"3948ecf3b9e1a1b9","name":"Request","source":"3948ecf3b9e1a1b9.html","type":"text/html","size":532},{"uid":"3781e9d65eb402ae","name":"HTTP/1.1 200 OK","source":"3781e9d65eb402ae.html","type":"text/html","size":114320}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"logTestStart","time":{"start":1759837993932,"stop":1759837993932,"duration":0},"status":"passed","steps":[{"name":"Start test","time":{"start":1759837993932,"stop":1759837993932,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'GET /Authors/$ → should return 400 Bad Request', tags = [], testClass = class com.fakeRestApi.tests.author.GetAuthorsTests, testMethod = void com.fakeRestApi.tests.author.GetAuthorsTests.checkGetAuthorWithInvalidIdShouldReturn400(java.lang.String)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Verify GET /Authors/{id} returns 400 Bad Request for malformed IDs","status":"passed","steps":[],"attachments":[{"uid":"a8b1284fadc6e8ee","name":"Request","source":"a8b1284fadc6e8ee.html","type":"text/html","size":540},{"uid":"8abaa96f7d791306","name":"HTTP/1.1 400 Bad Request","source":"8abaa96f7d791306.html","type":"text/html","size":760}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"logTestFinish","time":{"start":1759837994226,"stop":1759837994226,"duration":0},"status":"passed","steps":[{"name":"Finish test","time":{"start":1759837994226,"stop":1759837994226,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'GET /Authors/$ → should return 400 Bad Request', tags = [], testClass = class com.fakeRestApi.tests.author.GetAuthorsTests, testMethod = void com.fakeRestApi.tests.author.GetAuthorsTests.checkGetAuthorWithInvalidIdShouldReturn400(java.lang.String)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"tearDown","time":{"start":1759837996042,"stop":1759837996042,"duration":0},"status":"passed","steps":[{"name":"Tear down test environment","time":{"start":1759837996042,"stop":1759837996042,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.fakeRestApi.tests.author.GetAuthorsTests]/[test-template:checkGetAuthorWithInvalidIdShouldReturn400(java.lang.String)]/[test-template-invocation:#3]"},{"name":"feature","value":"Authors API"},{"name":"story","value":"Get Authors"},{"name":"epic","value":"Fake REST API tests"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2805@runnervmwhb2z.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.fakeRestApi.tests.author.GetAuthorsTests"},{"name":"testClass","value":"com.fakeRestApi.tests.author.GetAuthorsTests"},{"name":"testMethod","value":"checkGetAuthorWithInvalidIdShouldReturn400"},{"name":"suite","value":"com.fakeRestApi.tests.author.GetAuthorsTests"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"$"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":3},"items":[{"uid":"1887d637cb8ae040","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/15/#testresult/1887d637cb8ae040","status":"passed","time":{"start":1759837729137,"stop":1759837729427,"duration":290}},{"uid":"b2d588eb449ced4f","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/14/#testresult/b2d588eb449ced4f","status":"passed","time":{"start":1759835556929,"stop":1759835557215,"duration":286}}]},"tags":[]},"source":"cdab123a8a508ee0.json","parameterValues":["$"]}