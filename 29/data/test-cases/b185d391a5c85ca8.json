{"uid":"b185d391a5c85ca8","name":"checkGetAuthorWithInvalidIdShouldReturnBadRequest(String) GET /Authors/abc → should return 400 Bad Request","fullName":"com.fakeRestApi.tests.author.GetAuthorsTests.checkGetAuthorWithInvalidIdShouldReturnBadRequest","historyId":"3f64e846c84aa1facb7e773753798d28","time":{"start":1759909394889,"stop":1759909395198,"duration":309},"description":"Verify GET /Authors/{id} returns 400 Bad Request for malformed IDs","descriptionHtml":"<p>Verify GET /Authors/{id} returns 400 Bad Request for malformed IDs</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"initApiClients","time":{"start":1759909392190,"stop":1759909392191,"duration":1},"status":"passed","steps":[{"name":"Initialize API clients","time":{"start":1759909392190,"stop":1759909392191,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"initAllAuthors","time":{"start":1759909392191,"stop":1759909393080,"duration":889},"status":"passed","steps":[],"attachments":[{"uid":"bbb01d8bd3cb18b6","name":"Request","source":"bbb01d8bd3cb18b6.html","type":"text/html","size":532},{"uid":"69ba51167897c812","name":"HTTP/1.1 200 OK","source":"69ba51167897c812.html","type":"text/html","size":116576}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"logTestStart","time":{"start":1759909394890,"stop":1759909394890,"duration":0},"status":"passed","steps":[{"name":"Start test","time":{"start":1759909394890,"stop":1759909394890,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'GET /Authors/abc → should return 400 Bad Request', tags = [], testClass = class com.fakeRestApi.tests.author.GetAuthorsTests, testMethod = void com.fakeRestApi.tests.author.GetAuthorsTests.checkGetAuthorWithInvalidIdShouldReturnBadRequest(java.lang.String)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Verify GET /Authors/{id} returns 400 Bad Request for malformed IDs","status":"passed","steps":[],"attachments":[{"uid":"8b68cccebd579cd5","name":"Request","source":"8b68cccebd579cd5.html","type":"text/html","size":540},{"uid":"f1d4a1acccc6e862","name":"HTTP/1.1 400 Bad Request","source":"f1d4a1acccc6e862.html","type":"text/html","size":762}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"logTestFinish","time":{"start":1759909395197,"stop":1759909395198,"duration":1},"status":"passed","steps":[{"name":"Finish test","time":{"start":1759909395197,"stop":1759909395198,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'GET /Authors/abc → should return 400 Bad Request', tags = [], testClass = class com.fakeRestApi.tests.author.GetAuthorsTests, testMethod = void com.fakeRestApi.tests.author.GetAuthorsTests.checkGetAuthorWithInvalidIdShouldReturnBadRequest(java.lang.String)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"tearDown","time":{"start":1759909398044,"stop":1759909398045,"duration":1},"status":"passed","steps":[{"name":"Tear down test environment","time":{"start":1759909398044,"stop":1759909398045,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.fakeRestApi.tests.author.GetAuthorsTests]/[test-template:checkGetAuthorWithInvalidIdShouldReturnBadRequest(java.lang.String)]/[test-template-invocation:#1]"},{"name":"feature","value":"Authors API"},{"name":"story","value":"Get Authors"},{"name":"epic","value":"Fake REST API tests"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2905@runnervmwhb2z.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.fakeRestApi.tests.author.GetAuthorsTests"},{"name":"testClass","value":"com.fakeRestApi.tests.author.GetAuthorsTests"},{"name":"testMethod","value":"checkGetAuthorWithInvalidIdShouldReturnBadRequest"},{"name":"suite","value":"com.fakeRestApi.tests.author.GetAuthorsTests"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"abc"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":3},"items":[{"uid":"2c507fa0f8b8f8d5","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/28/#testresult/2c507fa0f8b8f8d5","status":"passed","time":{"start":1759868230703,"stop":1759868231174,"duration":471}},{"uid":"332485800f12a1a8","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/27/#testresult/332485800f12a1a8","status":"passed","time":{"start":1759868051099,"stop":1759868051540,"duration":441}}]},"tags":[]},"source":"b185d391a5c85ca8.json","parameterValues":["abc"]}