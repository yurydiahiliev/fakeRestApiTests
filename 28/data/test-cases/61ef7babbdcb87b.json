{"uid":"61ef7babbdcb87b","name":"checkCreateAuthorWithoutBodyShouldReturnBadRequest(SoftAssertions)","fullName":"com.fakeRestApi.tests.author.CreateAuthorsTests.checkCreateAuthorWithoutBodyShouldReturnBadRequest","historyId":"51d14e801656f575926b2692698accf0","time":{"start":1759868216619,"stop":1759868217698,"duration":1079},"description":"Verify that POST /Authors without body returns 400 Bad Request","descriptionHtml":"<p>Verify that POST /Authors without body returns 400 Bad Request</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"initApiClients","time":{"start":1759868208584,"stop":1759868209235,"duration":651},"status":"passed","steps":[{"name":"Initialize API clients","time":{"start":1759868208599,"stop":1759868209234,"duration":635},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"logTestStart","time":{"start":1759868216619,"stop":1759868216619,"duration":0},"status":"passed","steps":[{"name":"Start test","time":{"start":1759868216619,"stop":1759868216619,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'checkCreateAuthorWithoutBodyShouldReturnBadRequest(SoftAssertions)', tags = [], testClass = class com.fakeRestApi.tests.author.CreateAuthorsTests, testMethod = void com.fakeRestApi.tests.author.CreateAuthorsTests.checkCreateAuthorWithoutBodyShouldReturnBadRequest(org.assertj.core.api.SoftAssertions)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Verify that POST /Authors without body returns 400 Bad Request","status":"passed","steps":[],"attachments":[{"uid":"405e75c87e131590","name":"Request","source":"405e75c87e131590.html","type":"text/html","size":534},{"uid":"adb5ed93605d6c35","name":"HTTP/1.1 400 Bad Request","source":"adb5ed93605d6c35.html","type":"text/html","size":760}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"logTestFinish","time":{"start":1759868217697,"stop":1759868217698,"duration":1},"status":"passed","steps":[{"name":"Finish test","time":{"start":1759868217697,"stop":1759868217698,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'checkCreateAuthorWithoutBodyShouldReturnBadRequest(SoftAssertions)', tags = [], testClass = class com.fakeRestApi.tests.author.CreateAuthorsTests, testMethod = void com.fakeRestApi.tests.author.CreateAuthorsTests.checkCreateAuthorWithoutBodyShouldReturnBadRequest(org.assertj.core.api.SoftAssertions)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"tearDown","time":{"start":1759868218647,"stop":1759868218649,"duration":2},"status":"passed","steps":[{"name":"Tear down test environment","time":{"start":1759868218647,"stop":1759868218649,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.fakeRestApi.tests.author.CreateAuthorsTests]/[method:checkCreateAuthorWithoutBodyShouldReturnBadRequest(org.assertj.core.api.SoftAssertions)]"},{"name":"story","value":"Create Authors"},{"name":"feature","value":"Authors API"},{"name":"epic","value":"Fake REST API tests"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2802@runnervmwhb2z.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.fakeRestApi.tests.author.CreateAuthorsTests"},{"name":"testClass","value":"com.fakeRestApi.tests.author.CreateAuthorsTests"},{"name":"testMethod","value":"checkCreateAuthorWithoutBodyShouldReturnBadRequest"},{"name":"suite","value":"com.fakeRestApi.tests.author.CreateAuthorsTests"},{"name":"severity","value":"critical"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":2},"items":[{"uid":"619a8d8c62bd83df","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/27/#testresult/619a8d8c62bd83df","status":"passed","time":{"start":1759868039951,"stop":1759868040995,"duration":1044}}]},"tags":[]},"source":"61ef7babbdcb87b.json","parameterValues":[]}