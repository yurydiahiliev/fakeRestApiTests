{"uid":"f166fa9793d8adb5","name":"checkDeleteInvalidAuthorIdShouldReturnBadRequest(String) DELETE /Authors/null should return 400 Bad Request","fullName":"com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteInvalidAuthorIdShouldReturnBadRequest","historyId":"a3f9fdfd87f34f56b11e1799f6cb1e44","time":{"start":1759859545107,"stop":1759859545398,"duration":291},"description":"Verify that invalid author IDs return 400 Bad Request","descriptionHtml":"<p>Verify that invalid author IDs return 400 Bad Request</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"initApiClients","time":{"start":1759859541986,"stop":1759859541988,"duration":2},"status":"passed","steps":[{"name":"Initialize API clients","time":{"start":1759859541986,"stop":1759859541988,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"logTestStart","time":{"start":1759859545107,"stop":1759859545108,"duration":1},"status":"passed","steps":[{"name":"Start test","time":{"start":1759859545108,"stop":1759859545108,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'DELETE /Authors/null should return 400 Bad Request', tags = [], testClass = class com.fakeRestApi.tests.author.DeleteAuthorsTests, testMethod = void com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteInvalidAuthorIdShouldReturnBadRequest(java.lang.String)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Verify that invalid author IDs return 400 Bad Request","status":"passed","steps":[],"attachments":[{"uid":"609839596b90a488","name":"Request","source":"609839596b90a488.html","type":"text/html","size":548},{"uid":"a28cf952b2122bb3","name":"HTTP/1.1 400 Bad Request","source":"a28cf952b2122bb3.html","type":"text/html","size":763}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"logTestFinish","time":{"start":1759859545397,"stop":1759859545397,"duration":0},"status":"passed","steps":[{"name":"Finish test","time":{"start":1759859545397,"stop":1759859545397,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'DELETE /Authors/null should return 400 Bad Request', tags = [], testClass = class com.fakeRestApi.tests.author.DeleteAuthorsTests, testMethod = void com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteInvalidAuthorIdShouldReturnBadRequest(java.lang.String)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"tearDown","time":{"start":1759859545678,"stop":1759859545678,"duration":0},"status":"passed","steps":[{"name":"Tear down test environment","time":{"start":1759859545678,"stop":1759859545678,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.fakeRestApi.tests.author.DeleteAuthorsTests]/[test-template:checkDeleteInvalidAuthorIdShouldReturnBadRequest(java.lang.String)]/[test-template-invocation:#5]"},{"name":"feature","value":"Authors API"},{"name":"story","value":"Delete Authors"},{"name":"epic","value":"Fake REST API tests"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"3042@runnervmwhb2z.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.fakeRestApi.tests.author.DeleteAuthorsTests"},{"name":"testClass","value":"com.fakeRestApi.tests.author.DeleteAuthorsTests"},{"name":"testMethod","value":"checkDeleteInvalidAuthorIdShouldReturnBadRequest"},{"name":"suite","value":"com.fakeRestApi.tests.author.DeleteAuthorsTests"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"null"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":4},"items":[{"uid":"ae20c632f327979","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/22/#testresult/ae20c632f327979","status":"passed","time":{"start":1759859125714,"stop":1759859126193,"duration":479}},{"uid":"30f7eee1dee9f12d","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/21/#testresult/30f7eee1dee9f12d","status":"passed","time":{"start":1759858705014,"stop":1759858705313,"duration":299}},{"uid":"756a86bd9fcf278","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/20/#testresult/756a86bd9fcf278","status":"passed","time":{"start":1759852917132,"stop":1759852917614,"duration":482}}]},"tags":[]},"source":"f166fa9793d8adb5.json","parameterValues":["null"]}