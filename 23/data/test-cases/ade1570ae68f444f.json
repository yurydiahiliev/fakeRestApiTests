{"uid":"ade1570ae68f444f","name":"checkDeleteExistingAuthorShouldReturnOkAndAuthorShouldBeGone()","fullName":"com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteExistingAuthorShouldReturnOkAndAuthorShouldBeGone","historyId":"5f8c9df456cfadb83d989d30e71f35b7","time":{"start":1759859542292,"stop":1759859543127,"duration":835},"description":"Verify that deleting an existing author returns 200 OK and subsequent GET returns 404 Not Found","descriptionHtml":"<p>Verify that deleting an existing author returns 200 OK and subsequent GET returns 404 Not Found</p>\n","status":"failed","statusMessage":"[Status Code mismatch. Expected: 404 but was: 200] \nexpected: 404\n but was: 200","statusTrace":"org.opentest4j.AssertionFailedError: [Status Code mismatch. Expected: 404 but was: 200] \nexpected: 404\n but was: 200\n\tat com.fakeRestApi.utils.ResponseAssertions.hasStatusCode(ResponseAssertions.java:33)\n\tat com.fakeRestApi.utils.ResponseAssertions.verifyStatusCodeNotFound(ResponseAssertions.java:50)\n\tat com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteExistingAuthorShouldReturnOkAndAuthorShouldBeGone(DeleteAuthorsTests.java:45)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"initApiClients","time":{"start":1759859541986,"stop":1759859541988,"duration":2},"status":"passed","steps":[{"name":"Initialize API clients","time":{"start":1759859541986,"stop":1759859541988,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"logTestStart","time":{"start":1759859542292,"stop":1759859542293,"duration":1},"status":"passed","steps":[{"name":"Start test","time":{"start":1759859542292,"stop":1759859542293,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'checkDeleteExistingAuthorShouldReturnOkAndAuthorShouldBeGone()', tags = [], testClass = class com.fakeRestApi.tests.author.DeleteAuthorsTests, testMethod = void com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteExistingAuthorShouldReturnOkAndAuthorShouldBeGone()]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Verify that deleting an existing author returns 200 OK and subsequent GET returns 404 Not Found","status":"failed","statusMessage":"[Status Code mismatch. Expected: 404 but was: 200] \nexpected: 404\n but was: 200","statusTrace":"org.opentest4j.AssertionFailedError: [Status Code mismatch. Expected: 404 but was: 200] \nexpected: 404\n but was: 200\n\tat com.fakeRestApi.utils.ResponseAssertions.hasStatusCode(ResponseAssertions.java:33)\n\tat com.fakeRestApi.utils.ResponseAssertions.verifyStatusCodeNotFound(ResponseAssertions.java:50)\n\tat com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteExistingAuthorShouldReturnOkAndAuthorShouldBeGone(DeleteAuthorsTests.java:45)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n","steps":[],"attachments":[{"uid":"b62f5fa5198d22ea","name":"Request","source":"b62f5fa5198d22ea.html","type":"text/html","size":917},{"uid":"83dccf0d66fc1092","name":"HTTP/1.1 200 OK","source":"83dccf0d66fc1092.html","type":"text/html","size":533},{"uid":"ba1e211c508b3b3c","name":"Request","source":"ba1e211c508b3b3c.html","type":"text/html","size":544},{"uid":"bcba61fbd79b8390","name":"HTTP/1.1 200 OK","source":"bcba61fbd79b8390.html","type":"text/html","size":310},{"uid":"6ab6c17a94d5f28e","name":"Request","source":"6ab6c17a94d5f28e.html","type":"text/html","size":538},{"uid":"ee7bc913844e9756","name":"HTTP/1.1 200 OK","source":"ee7bc913844e9756.html","type":"text/html","size":551}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"logTestFinish","time":{"start":1759859543125,"stop":1759859543126,"duration":1},"status":"passed","steps":[{"name":"Finish test","time":{"start":1759859543126,"stop":1759859543126,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'checkDeleteExistingAuthorShouldReturnOkAndAuthorShouldBeGone()', tags = [], testClass = class com.fakeRestApi.tests.author.DeleteAuthorsTests, testMethod = void com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteExistingAuthorShouldReturnOkAndAuthorShouldBeGone()]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"tearDown","time":{"start":1759859545678,"stop":1759859545678,"duration":0},"status":"passed","steps":[{"name":"Tear down test environment","time":{"start":1759859545678,"stop":1759859545678,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.fakeRestApi.tests.author.DeleteAuthorsTests]/[method:checkDeleteExistingAuthorShouldReturnOkAndAuthorShouldBeGone()]"},{"name":"feature","value":"Authors API"},{"name":"story","value":"Delete Authors"},{"name":"epic","value":"Fake REST API tests"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"3042@runnervmwhb2z.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.fakeRestApi.tests.author.DeleteAuthorsTests"},{"name":"testClass","value":"com.fakeRestApi.tests.author.DeleteAuthorsTests"},{"name":"testMethod","value":"checkDeleteExistingAuthorShouldReturnOkAndAuthorShouldBeGone"},{"name":"suite","value":"com.fakeRestApi.tests.author.DeleteAuthorsTests"},{"name":"severity","value":"critical"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":10},"items":[{"uid":"146441f86abea42","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/22/#testresult/146441f86abea42","status":"failed","statusDetails":"[Status Code mismatch. Expected: 404 but was: 200] \nexpected: 404\n but was: 200","time":{"start":1759859120855,"stop":1759859122322,"duration":1467}},{"uid":"d73db25abd4f0a31","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/21/#testresult/d73db25abd4f0a31","status":"failed","statusDetails":"[Status Code mismatch. Expected: 404 but was: 200] \nexpected: 404\n but was: 200","time":{"start":1759858701979,"stop":1759858702933,"duration":954}},{"uid":"c73a278ebf4cd809","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/20/#testresult/c73a278ebf4cd809","status":"failed","statusDetails":"[200 Status Code not equal to - 404] \nexpected: 404\n but was: 200","time":{"start":1759852912348,"stop":1759852913787,"duration":1439}},{"uid":"d912f8abbb621b3","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/19/#testresult/d912f8abbb621b3","status":"failed","statusDetails":"[Subsequent GET after DELETE should return 404 Not Found] \nexpected: 404\n but was: 200","time":{"start":1759838432391,"stop":1759838433434,"duration":1043}},{"uid":"6f8ad393881e3b1b","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/18/#testresult/6f8ad393881e3b1b","status":"failed","statusDetails":"[Subsequent GET after DELETE should return 404 Not Found] \nexpected: 404\n but was: 200","time":{"start":1759838381698,"stop":1759838383105,"duration":1407}},{"uid":"da225288ea278005","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/17/#testresult/da225288ea278005","status":"failed","statusDetails":"[Subsequent GET after DELETE should return 404 Not Found] \nexpected: 404\n but was: 200","time":{"start":1759838229126,"stop":1759838231117,"duration":1991}},{"uid":"d1aa2e7e80b87d4e","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/16/#testresult/d1aa2e7e80b87d4e","status":"failed","statusDetails":"[Subsequent GET after DELETE should return 404 Not Found] \nexpected: 404\n but was: 200","time":{"start":1759837987345,"stop":1759837988236,"duration":891}},{"uid":"c168d4838eabb2d4","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/15/#testresult/c168d4838eabb2d4","status":"failed","statusDetails":"[Subsequent GET after DELETE should return 404 Not Found] \nexpected: 404\n but was: 200","time":{"start":1759837722390,"stop":1759837723306,"duration":916}},{"uid":"7ed792719f29b7a2","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/14/#testresult/7ed792719f29b7a2","status":"failed","statusDetails":"[Subsequent GET after DELETE should return 404 Not Found] \nexpected: 404\n but was: 200","time":{"start":1759835550488,"stop":1759835551369,"duration":881}}]},"tags":[]},"source":"ade1570ae68f444f.json","parameterValues":[]}