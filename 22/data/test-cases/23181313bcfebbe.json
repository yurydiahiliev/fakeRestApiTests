{"uid":"23181313bcfebbe","name":"checkGetAuthorWithInvalidIdShouldReturnBadRequest(String) GET /Authors/$ → should return 400 Bad Request","fullName":"com.fakeRestApi.tests.author.GetAuthorsTests.checkGetAuthorWithInvalidIdShouldReturnBadRequest","historyId":"e36fadbe5c987147d57be116b8e56555","time":{"start":1759859132548,"stop":1759859133040,"duration":492},"description":"Verify GET /Authors/{id} returns 400 Bad Request for malformed IDs","descriptionHtml":"<p>Verify GET /Authors/{id} returns 400 Bad Request for malformed IDs</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"initApiClients","time":{"start":1759859126683,"stop":1759859126684,"duration":1},"status":"passed","steps":[{"name":"Initialize API clients","time":{"start":1759859126683,"stop":1759859126684,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"initAllAuthors","time":{"start":1759859126684,"stop":1759859128408,"duration":1724},"status":"passed","steps":[],"attachments":[{"uid":"8e1d5b26568da4ba","name":"Request","source":"8e1d5b26568da4ba.html","type":"text/html","size":532},{"uid":"d9eeb2964c0dbb08","name":"HTTP/1.1 200 OK","source":"d9eeb2964c0dbb08.html","type":"text/html","size":110903}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"logTestStart","time":{"start":1759859132549,"stop":1759859132549,"duration":0},"status":"passed","steps":[{"name":"Start test","time":{"start":1759859132549,"stop":1759859132549,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'GET /Authors/$ → should return 400 Bad Request', tags = [], testClass = class com.fakeRestApi.tests.author.GetAuthorsTests, testMethod = void com.fakeRestApi.tests.author.GetAuthorsTests.checkGetAuthorWithInvalidIdShouldReturnBadRequest(java.lang.String)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Verify GET /Authors/{id} returns 400 Bad Request for malformed IDs","status":"passed","steps":[],"attachments":[{"uid":"5d07b1b4d72a928","name":"Request","source":"5d07b1b4d72a928.html","type":"text/html","size":540},{"uid":"5de8374c3081312","name":"HTTP/1.1 400 Bad Request","source":"5de8374c3081312.html","type":"text/html","size":760}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"logTestFinish","time":{"start":1759859133039,"stop":1759859133039,"duration":0},"status":"passed","steps":[{"name":"Finish test","time":{"start":1759859133039,"stop":1759859133039,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'GET /Authors/$ → should return 400 Bad Request', tags = [], testClass = class com.fakeRestApi.tests.author.GetAuthorsTests, testMethod = void com.fakeRestApi.tests.author.GetAuthorsTests.checkGetAuthorWithInvalidIdShouldReturnBadRequest(java.lang.String)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"tearDown","time":{"start":1759859136682,"stop":1759859136682,"duration":0},"status":"passed","steps":[{"name":"Tear down test environment","time":{"start":1759859136682,"stop":1759859136682,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.fakeRestApi.tests.author.GetAuthorsTests]/[test-template:checkGetAuthorWithInvalidIdShouldReturnBadRequest(java.lang.String)]/[test-template-invocation:#3]"},{"name":"feature","value":"Authors API"},{"name":"story","value":"Get Authors"},{"name":"epic","value":"Fake REST API tests"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2837@runnervmwhb2z.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.fakeRestApi.tests.author.GetAuthorsTests"},{"name":"testClass","value":"com.fakeRestApi.tests.author.GetAuthorsTests"},{"name":"testMethod","value":"checkGetAuthorWithInvalidIdShouldReturnBadRequest"},{"name":"suite","value":"com.fakeRestApi.tests.author.GetAuthorsTests"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"$"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":3},"items":[{"uid":"fa465811bd127e7e","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/21/#testresult/fa465811bd127e7e","status":"passed","time":{"start":1759858709785,"stop":1759858710098,"duration":313}},{"uid":"f99e5c9557e60242","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/20/#testresult/f99e5c9557e60242","status":"passed","time":{"start":1759852923253,"stop":1759852923758,"duration":505}}]},"tags":[]},"source":"23181313bcfebbe.json","parameterValues":["$"]}