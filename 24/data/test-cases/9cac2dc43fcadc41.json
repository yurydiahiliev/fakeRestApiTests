{"uid":"9cac2dc43fcadc41","name":"checkUserCanCreateAuthorWithAllFields(SoftAssertions)","fullName":"com.fakeRestApi.tests.author.CreateAuthorsTests.checkUserCanCreateAuthorWithAllFields","historyId":"ce19ef22c6fd432b41cdb9119cca728a","time":{"start":1759867420670,"stop":1759867425152,"duration":4482},"description":"Verify that user can create an author with all required valid fields","descriptionHtml":"<p>Verify that user can create an author with all required valid fields</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"initApiClients","time":{"start":1759867419825,"stop":1759867420639,"duration":814},"status":"passed","steps":[{"name":"Initialize API clients","time":{"start":1759867419842,"stop":1759867420638,"duration":796},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"logTestStart","time":{"start":1759867420689,"stop":1759867420692,"duration":3},"status":"passed","steps":[{"name":"Start test","time":{"start":1759867420691,"stop":1759867420692,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'checkUserCanCreateAuthorWithAllFields(SoftAssertions)', tags = [], testClass = class com.fakeRestApi.tests.author.CreateAuthorsTests, testMethod = void com.fakeRestApi.tests.author.CreateAuthorsTests.checkUserCanCreateAuthorWithAllFields(org.assertj.core.api.SoftAssertions)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Verify that user can create an author with all required valid fields","status":"passed","steps":[],"attachments":[{"uid":"a06ef9dd7b036363","name":"Request","source":"a06ef9dd7b036363.html","type":"text/html","size":925},{"uid":"7898c8a72da5c946","name":"HTTP/1.1 200 OK","source":"7898c8a72da5c946.html","type":"text/html","size":537}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"logTestFinish","time":{"start":1759867425138,"stop":1759867425140,"duration":2},"status":"passed","steps":[{"name":"Finish test","time":{"start":1759867425139,"stop":1759867425140,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'checkUserCanCreateAuthorWithAllFields(SoftAssertions)', tags = [], testClass = class com.fakeRestApi.tests.author.CreateAuthorsTests, testMethod = void com.fakeRestApi.tests.author.CreateAuthorsTests.checkUserCanCreateAuthorWithAllFields(org.assertj.core.api.SoftAssertions)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"tearDown","time":{"start":1759867429113,"stop":1759867429116,"duration":3},"status":"passed","steps":[{"name":"Tear down test environment","time":{"start":1759867429114,"stop":1759867429116,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.fakeRestApi.tests.author.CreateAuthorsTests]/[method:checkUserCanCreateAuthorWithAllFields(org.assertj.core.api.SoftAssertions)]"},{"name":"story","value":"Create Authors"},{"name":"feature","value":"Authors API"},{"name":"epic","value":"Fake REST API tests"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2796@runnervmwhb2z.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.fakeRestApi.tests.author.CreateAuthorsTests"},{"name":"testClass","value":"com.fakeRestApi.tests.author.CreateAuthorsTests"},{"name":"testMethod","value":"checkUserCanCreateAuthorWithAllFields"},{"name":"suite","value":"com.fakeRestApi.tests.author.CreateAuthorsTests"},{"name":"severity","value":"critical"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":4},"items":[{"uid":"78a4f038831689ee","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/23/#testresult/78a4f038831689ee","status":"passed","time":{"start":1759859533729,"stop":1759859538111,"duration":4382}},{"uid":"3f645dce731d09dc","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/22/#testresult/3f645dce731d09dc","status":"passed","time":{"start":1759859110135,"stop":1759859114178,"duration":4043}},{"uid":"20d16f407b2a33b2","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/21/#testresult/20d16f407b2a33b2","status":"passed","time":{"start":1759858693710,"stop":1759858697590,"duration":3880}}]},"tags":[]},"source":"9cac2dc43fcadc41.json","parameterValues":[]}