{"uid":"db45d19447f8e9f8","name":"checkUserCanCreateAuthorWithAllFields(SoftAssertions)","fullName":"com.fakeRestApi.tests.author.CreateAuthorsTests.checkUserCanCreateAuthorWithAllFields","historyId":"ce19ef22c6fd432b41cdb9119cca728a","time":{"start":1759868031926,"stop":1759868036765,"duration":4839},"description":"Verify that user can create an author with all required valid fields","descriptionHtml":"<p>Verify that user can create an author with all required valid fields</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"initApiClients","time":{"start":1759868031023,"stop":1759868031892,"duration":869},"status":"passed","steps":[{"name":"Initialize API clients","time":{"start":1759868031042,"stop":1759868031891,"duration":849},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"logTestStart","time":{"start":1759868031944,"stop":1759868031949,"duration":5},"status":"passed","steps":[{"name":"Start test","time":{"start":1759868031947,"stop":1759868031949,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'checkUserCanCreateAuthorWithAllFields(SoftAssertions)', tags = [], testClass = class com.fakeRestApi.tests.author.CreateAuthorsTests, testMethod = void com.fakeRestApi.tests.author.CreateAuthorsTests.checkUserCanCreateAuthorWithAllFields(org.assertj.core.api.SoftAssertions)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Verify that user can create an author with all required valid fields","status":"passed","steps":[],"attachments":[{"uid":"17b969b0797a726f","name":"Request","source":"17b969b0797a726f.html","type":"text/html","size":925},{"uid":"10ae6f5729331728","name":"HTTP/1.1 200 OK","source":"10ae6f5729331728.html","type":"text/html","size":537}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"logTestFinish","time":{"start":1759868036754,"stop":1759868036755,"duration":1},"status":"passed","steps":[{"name":"Finish test","time":{"start":1759868036754,"stop":1759868036755,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'checkUserCanCreateAuthorWithAllFields(SoftAssertions)', tags = [], testClass = class com.fakeRestApi.tests.author.CreateAuthorsTests, testMethod = void com.fakeRestApi.tests.author.CreateAuthorsTests.checkUserCanCreateAuthorWithAllFields(org.assertj.core.api.SoftAssertions)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"tearDown","time":{"start":1759868041997,"stop":1759868041999,"duration":2},"status":"passed","steps":[{"name":"Tear down test environment","time":{"start":1759868041997,"stop":1759868041999,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.fakeRestApi.tests.author.CreateAuthorsTests]/[method:checkUserCanCreateAuthorWithAllFields(org.assertj.core.api.SoftAssertions)]"},{"name":"story","value":"Create Authors"},{"name":"feature","value":"Authors API"},{"name":"epic","value":"Fake REST API tests"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2942@runnervmwhb2z.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.fakeRestApi.tests.author.CreateAuthorsTests"},{"name":"testClass","value":"com.fakeRestApi.tests.author.CreateAuthorsTests"},{"name":"testMethod","value":"checkUserCanCreateAuthorWithAllFields"},{"name":"suite","value":"com.fakeRestApi.tests.author.CreateAuthorsTests"},{"name":"severity","value":"critical"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[],"tags":[]},"source":"db45d19447f8e9f8.json","parameterValues":[]}