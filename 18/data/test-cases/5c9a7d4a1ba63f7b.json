{"uid":"5c9a7d4a1ba63f7b","name":"checkDeleteInvalidAuthorIdShouldReturn400(String) DELETE /Authors/abc should return 400 Bad Request","fullName":"com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteInvalidAuthorIdShouldReturn400","historyId":"3bb4d379d55178c5dc6f4e3d27775a0","time":{"start":1759838384493,"stop":1759838384970,"duration":477},"description":"Verify that invalid author IDs return 400 Bad Request","descriptionHtml":"<p>Verify that invalid author IDs return 400 Bad Request</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"initApiClients","time":{"start":1759838381201,"stop":1759838381203,"duration":2},"status":"passed","steps":[{"name":"Initialize API clients","time":{"start":1759838381201,"stop":1759838381203,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"logTestStart","time":{"start":1759838384494,"stop":1759838384494,"duration":0},"status":"passed","steps":[{"name":"Start test","time":{"start":1759838384494,"stop":1759838384494,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'DELETE /Authors/abc should return 400 Bad Request', tags = [], testClass = class com.fakeRestApi.tests.author.DeleteAuthorsTests, testMethod = void com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteInvalidAuthorIdShouldReturn400(java.lang.String)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Verify that invalid author IDs return 400 Bad Request","status":"passed","steps":[],"attachments":[{"uid":"4d49c68499f652bc","name":"Request","source":"4d49c68499f652bc.html","type":"text/html","size":546},{"uid":"8ca1c4a6a91e1de7","name":"HTTP/1.1 400 Bad Request","source":"8ca1c4a6a91e1de7.html","type":"text/html","size":762}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"logTestFinish","time":{"start":1759838384969,"stop":1759838384969,"duration":0},"status":"passed","steps":[{"name":"Finish test","time":{"start":1759838384969,"stop":1759838384969,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'DELETE /Authors/abc should return 400 Bad Request', tags = [], testClass = class com.fakeRestApi.tests.author.DeleteAuthorsTests, testMethod = void com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteInvalidAuthorIdShouldReturn400(java.lang.String)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"tearDown","time":{"start":1759838387332,"stop":1759838387332,"duration":0},"status":"passed","steps":[{"name":"Tear down test environment","time":{"start":1759838387332,"stop":1759838387332,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.fakeRestApi.tests.author.DeleteAuthorsTests]/[test-template:checkDeleteInvalidAuthorIdShouldReturn400(java.lang.String)]/[test-template-invocation:#1]"},{"name":"feature","value":"Authors API"},{"name":"story","value":"Delete Authors"},{"name":"epic","value":"Fake REST API tests"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2850@runnervmwhb2z.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.fakeRestApi.tests.author.DeleteAuthorsTests"},{"name":"testClass","value":"com.fakeRestApi.tests.author.DeleteAuthorsTests"},{"name":"testMethod","value":"checkDeleteInvalidAuthorIdShouldReturn400"},{"name":"suite","value":"com.fakeRestApi.tests.author.DeleteAuthorsTests"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"abc"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":5},"items":[{"uid":"1cbeacfc53e07394","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/17/#testresult/1cbeacfc53e07394","status":"passed","time":{"start":1759838232201,"stop":1759838232565,"duration":364}},{"uid":"f200c251c9bb3082","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/16/#testresult/f200c251c9bb3082","status":"passed","time":{"start":1759837989118,"stop":1759837989404,"duration":286}},{"uid":"efc6481cc567c2d4","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/15/#testresult/efc6481cc567c2d4","status":"passed","time":{"start":1759837724187,"stop":1759837724512,"duration":325}},{"uid":"d341f050f9406089","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/14/#testresult/d341f050f9406089","status":"passed","time":{"start":1759835552196,"stop":1759835552496,"duration":300}}]},"tags":[]},"source":"5c9a7d4a1ba63f7b.json","parameterValues":["abc"]}