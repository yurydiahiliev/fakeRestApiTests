{"uid":"15412d361059340f","name":"checkDeleteInvalidAuthorIdShouldReturn400(String) DELETE /Authors/null should return 400 Bad Request","fullName":"com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteInvalidAuthorIdShouldReturn400","historyId":"83ca8b0331411c03b0c4dc7329c54ec2","time":{"start":1759838386413,"stop":1759838386869,"duration":456},"description":"Verify that invalid author IDs return 400 Bad Request","descriptionHtml":"<p>Verify that invalid author IDs return 400 Bad Request</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"initApiClients","time":{"start":1759838381201,"stop":1759838381203,"duration":2},"status":"passed","steps":[{"name":"Initialize API clients","time":{"start":1759838381201,"stop":1759838381203,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"logTestStart","time":{"start":1759838386414,"stop":1759838386414,"duration":0},"status":"passed","steps":[{"name":"Start test","time":{"start":1759838386414,"stop":1759838386414,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'DELETE /Authors/null should return 400 Bad Request', tags = [], testClass = class com.fakeRestApi.tests.author.DeleteAuthorsTests, testMethod = void com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteInvalidAuthorIdShouldReturn400(java.lang.String)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Verify that invalid author IDs return 400 Bad Request","status":"passed","steps":[],"attachments":[{"uid":"658a3158d77ac024","name":"Request","source":"658a3158d77ac024.html","type":"text/html","size":548},{"uid":"79c7264dbfda2adf","name":"HTTP/1.1 400 Bad Request","source":"79c7264dbfda2adf.html","type":"text/html","size":763}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"logTestFinish","time":{"start":1759838386868,"stop":1759838386869,"duration":1},"status":"passed","steps":[{"name":"Finish test","time":{"start":1759838386868,"stop":1759838386869,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'DELETE /Authors/null should return 400 Bad Request', tags = [], testClass = class com.fakeRestApi.tests.author.DeleteAuthorsTests, testMethod = void com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteInvalidAuthorIdShouldReturn400(java.lang.String)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"tearDown","time":{"start":1759838387332,"stop":1759838387332,"duration":0},"status":"passed","steps":[{"name":"Tear down test environment","time":{"start":1759838387332,"stop":1759838387332,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.fakeRestApi.tests.author.DeleteAuthorsTests]/[test-template:checkDeleteInvalidAuthorIdShouldReturn400(java.lang.String)]/[test-template-invocation:#5]"},{"name":"feature","value":"Authors API"},{"name":"story","value":"Delete Authors"},{"name":"epic","value":"Fake REST API tests"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2850@runnervmwhb2z.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.fakeRestApi.tests.author.DeleteAuthorsTests"},{"name":"testClass","value":"com.fakeRestApi.tests.author.DeleteAuthorsTests"},{"name":"testMethod","value":"checkDeleteInvalidAuthorIdShouldReturn400"},{"name":"suite","value":"com.fakeRestApi.tests.author.DeleteAuthorsTests"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"null"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":5},"items":[{"uid":"5037867adb79a314","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/17/#testresult/5037867adb79a314","status":"passed","time":{"start":1759838233647,"stop":1759838234037,"duration":390}},{"uid":"587c90defaf5cd4e","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/16/#testresult/587c90defaf5cd4e","status":"passed","time":{"start":1759837990332,"stop":1759837990637,"duration":305}},{"uid":"9d2092c3413c1ac7","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/15/#testresult/9d2092c3413c1ac7","status":"passed","time":{"start":1759837725449,"stop":1759837725750,"duration":301}},{"uid":"347d52c93292f2c7","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/14/#testresult/347d52c93292f2c7","status":"passed","time":{"start":1759835553418,"stop":1759835553697,"duration":279}}]},"tags":[]},"source":"15412d361059340f.json","parameterValues":["null"]}