{"uid":"b4f96e11e75bc6b0","name":"checkGetAuthorWithNonexistentIdShouldReturnBadRequest(String) GET /Authors/999999 → should return 404 Not Found","fullName":"com.fakeRestApi.tests.author.GetAuthorsTests.checkGetAuthorWithNonexistentIdShouldReturnBadRequest","historyId":"7ac046d15bcc1760dee7c0e9bc36b845","time":{"start":1759858708482,"stop":1759858708844,"duration":362},"description":"Verify GET /Authors/{id} returns 404 Not Found for nonexistent IDs","descriptionHtml":"<p>Verify GET /Authors/{id} returns 404 Not Found for nonexistent IDs</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"initApiClients","time":{"start":1759858705612,"stop":1759858705613,"duration":1},"status":"passed","steps":[{"name":"Initialize API clients","time":{"start":1759858705612,"stop":1759858705613,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"initAllAuthors","time":{"start":1759858705613,"stop":1759858706479,"duration":866},"status":"passed","steps":[],"attachments":[{"uid":"739c9c061fd0d424","name":"Request","source":"739c9c061fd0d424.html","type":"text/html","size":532},{"uid":"d3550e4457ff3866","name":"HTTP/1.1 200 OK","source":"d3550e4457ff3866.html","type":"text/html","size":110719}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"logTestStart","time":{"start":1759858708483,"stop":1759858708483,"duration":0},"status":"passed","steps":[{"name":"Start test","time":{"start":1759858708483,"stop":1759858708483,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'GET /Authors/999999 → should return 404 Not Found', tags = [], testClass = class com.fakeRestApi.tests.author.GetAuthorsTests, testMethod = void com.fakeRestApi.tests.author.GetAuthorsTests.checkGetAuthorWithNonexistentIdShouldReturnBadRequest(java.lang.String)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Verify GET /Authors/{id} returns 404 Not Found for nonexistent IDs","status":"passed","steps":[],"attachments":[{"uid":"48421caaa687308c","name":"Request","source":"48421caaa687308c.html","type":"text/html","size":546},{"uid":"674c0beec7a4e02d","name":"HTTP/1.1 404 Not Found","source":"674c0beec7a4e02d.html","type":"text/html","size":655}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"logTestFinish","time":{"start":1759858708843,"stop":1759858708843,"duration":0},"status":"passed","steps":[{"name":"Finish test","time":{"start":1759858708843,"stop":1759858708843,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'GET /Authors/999999 → should return 404 Not Found', tags = [], testClass = class com.fakeRestApi.tests.author.GetAuthorsTests, testMethod = void com.fakeRestApi.tests.author.GetAuthorsTests.checkGetAuthorWithNonexistentIdShouldReturnBadRequest(java.lang.String)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"tearDown","time":{"start":1759858712853,"stop":1759858712854,"duration":1},"status":"passed","steps":[{"name":"Tear down test environment","time":{"start":1759858712853,"stop":1759858712854,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.fakeRestApi.tests.author.GetAuthorsTests]/[test-template:checkGetAuthorWithNonexistentIdShouldReturnBadRequest(java.lang.String)]/[test-template-invocation:#3]"},{"name":"feature","value":"Authors API"},{"name":"story","value":"Get Authors"},{"name":"epic","value":"Fake REST API tests"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2820@runnervmwhb2z.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.fakeRestApi.tests.author.GetAuthorsTests"},{"name":"testClass","value":"com.fakeRestApi.tests.author.GetAuthorsTests"},{"name":"testMethod","value":"checkGetAuthorWithNonexistentIdShouldReturnBadRequest"},{"name":"suite","value":"com.fakeRestApi.tests.author.GetAuthorsTests"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"999999"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":2},"items":[{"uid":"f84822a0a378378c","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/20/#testresult/f84822a0a378378c","status":"passed","time":{"start":1759852921703,"stop":1759852922264,"duration":561}}]},"tags":[]},"source":"b4f96e11e75bc6b0.json","parameterValues":["999999"]}