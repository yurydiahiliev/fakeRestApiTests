{"uid":"61d43b16aec54078","name":"shouldReturn404WhenUpdatingNonExistingAuthor()","fullName":"com.fakeRestApi.tests.author.UpdateAuthorsTests.shouldReturn404WhenUpdatingNonExistingAuthor","historyId":"694b4b879e98451548080954c5797a4e","time":{"start":1759858717872,"stop":1759858718161,"duration":289},"description":"PUT /Authors/{id} should return 404 when author does not exist","descriptionHtml":"<p>PUT /Authors/{id} should return 404 when author does not exist</p>\n","status":"failed","statusMessage":"[Status Code mismatch. Expected: 404 but was: 200] \nexpected: 404\n but was: 200","statusTrace":"org.opentest4j.AssertionFailedError: [Status Code mismatch. Expected: 404 but was: 200] \nexpected: 404\n but was: 200\n\tat com.fakeRestApi.utils.ResponseAssertions.hasStatusCode(ResponseAssertions.java:33)\n\tat com.fakeRestApi.utils.ResponseAssertions.verifyStatusCodeNotFound(ResponseAssertions.java:50)\n\tat com.fakeRestApi.tests.author.UpdateAuthorsTests.shouldReturn404WhenUpdatingNonExistingAuthor(UpdateAuthorsTests.java:73)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"initApiClients","time":{"start":1759858712856,"stop":1759858712857,"duration":1},"status":"passed","steps":[{"name":"Initialize API clients","time":{"start":1759858712856,"stop":1759858712857,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"logTestStart","time":{"start":1759858717873,"stop":1759858717873,"duration":0},"status":"passed","steps":[{"name":"Start test","time":{"start":1759858717873,"stop":1759858717873,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'shouldReturn404WhenUpdatingNonExistingAuthor()', tags = [], testClass = class com.fakeRestApi.tests.author.UpdateAuthorsTests, testMethod = void com.fakeRestApi.tests.author.UpdateAuthorsTests.shouldReturn404WhenUpdatingNonExistingAuthor()]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"PUT /Authors/{id} should return 404 when author does not exist","status":"failed","statusMessage":"[Status Code mismatch. Expected: 404 but was: 200] \nexpected: 404\n but was: 200","statusTrace":"org.opentest4j.AssertionFailedError: [Status Code mismatch. Expected: 404 but was: 200] \nexpected: 404\n but was: 200\n\tat com.fakeRestApi.utils.ResponseAssertions.hasStatusCode(ResponseAssertions.java:33)\n\tat com.fakeRestApi.utils.ResponseAssertions.verifyStatusCodeNotFound(ResponseAssertions.java:50)\n\tat com.fakeRestApi.tests.author.UpdateAuthorsTests.shouldReturn404WhenUpdatingNonExistingAuthor(UpdateAuthorsTests.java:73)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n","steps":[],"attachments":[{"uid":"bf7f647c0cfb9938","name":"Request","source":"bf7f647c0cfb9938.html","type":"text/html","size":939},{"uid":"858468fd64130d65","name":"HTTP/1.1 200 OK","source":"858468fd64130d65.html","type":"text/html","size":539}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"logTestFinish","time":{"start":1759858718160,"stop":1759858718161,"duration":1},"status":"passed","steps":[{"name":"Finish test","time":{"start":1759858718160,"stop":1759858718161,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'shouldReturn404WhenUpdatingNonExistingAuthor()', tags = [], testClass = class com.fakeRestApi.tests.author.UpdateAuthorsTests, testMethod = void com.fakeRestApi.tests.author.UpdateAuthorsTests.shouldReturn404WhenUpdatingNonExistingAuthor()]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"tearDown","time":{"start":1759858720818,"stop":1759858720818,"duration":0},"status":"passed","steps":[{"name":"Tear down test environment","time":{"start":1759858720818,"stop":1759858720818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.fakeRestApi.tests.author.UpdateAuthorsTests]/[method:shouldReturn404WhenUpdatingNonExistingAuthor()]"},{"name":"feature","value":"Authors API"},{"name":"epic","value":"Fake REST API tests"},{"name":"story","value":"Update Authors"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2820@runnervmwhb2z.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.fakeRestApi.tests.author.UpdateAuthorsTests"},{"name":"testClass","value":"com.fakeRestApi.tests.author.UpdateAuthorsTests"},{"name":"testMethod","value":"shouldReturn404WhenUpdatingNonExistingAuthor"},{"name":"suite","value":"com.fakeRestApi.tests.author.UpdateAuthorsTests"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"d1f5be821e96a9e1","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/20/#testresult/d1f5be821e96a9e1","status":"failed","statusDetails":"[200 Status Code not equal to - 404] \nexpected: 404\n but was: 200","time":{"start":1759852943098,"stop":1759852943581,"duration":483}},{"uid":"b8bc4a6777c5341","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/19/#testresult/b8bc4a6777c5341","status":"failed","statusDetails":"[Should return 404 Not Found for non-existing author] \nexpected: 404\n but was: 200","time":{"start":1759838448363,"stop":1759838448727,"duration":364}},{"uid":"75f608bed80c22a7","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/18/#testresult/75f608bed80c22a7","status":"failed","statusDetails":"[Should return 404 Not Found for non-existing author] \nexpected: 404\n but was: 200","time":{"start":1759838402116,"stop":1759838402578,"duration":462}},{"uid":"69a2cc0338c7ee4","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/17/#testresult/69a2cc0338c7ee4","status":"failed","statusDetails":"[Should return 404 Not Found for non-existing author] \nexpected: 404\n but was: 200","time":{"start":1759838245938,"stop":1759838246292,"duration":354}},{"uid":"d703d29985e880ee","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/16/#testresult/d703d29985e880ee","status":"failed","statusDetails":"[Should return 404 Not Found for non-existing author] \nexpected: 404\n but was: 200","time":{"start":1759838000398,"stop":1759838000694,"duration":296}},{"uid":"730ffd1ec955ded2","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/15/#testresult/730ffd1ec955ded2","status":"failed","statusDetails":"[Should return 404 Not Found for non-existing author] \nexpected: 404\n but was: 200","time":{"start":1759837735821,"stop":1759837736112,"duration":291}},{"uid":"dae0b24ebbfd520b","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/14/#testresult/dae0b24ebbfd520b","status":"failed","statusDetails":"[Should return 404 Not Found for non-existing author] \nexpected: 404\n but was: 200","time":{"start":1759835564828,"stop":1759835565107,"duration":279}}]},"tags":[]},"source":"61d43b16aec54078.json","parameterValues":[]}