{"uid":"779d0025f32b4073","name":"checkDeleteInvalidAuthorIdShouldReturn400(String) DELETE /Authors/! should return 400 Bad Request","fullName":"com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteInvalidAuthorIdShouldReturn400","historyId":"1f63baa36da50b5f7210f1dd93d049ec","time":{"start":1759838232568,"stop":1759838232929,"duration":361},"description":"Verify that invalid author IDs return 400 Bad Request","descriptionHtml":"<p>Verify that invalid author IDs return 400 Bad Request</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"initApiClients","time":{"start":1759838228682,"stop":1759838228684,"duration":2},"status":"passed","steps":[{"name":"Initialize API clients","time":{"start":1759838228682,"stop":1759838228684,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"logTestStart","time":{"start":1759838232568,"stop":1759838232569,"duration":1},"status":"passed","steps":[{"name":"Start test","time":{"start":1759838232568,"stop":1759838232569,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'DELETE /Authors/! should return 400 Bad Request', tags = [], testClass = class com.fakeRestApi.tests.author.DeleteAuthorsTests, testMethod = void com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteInvalidAuthorIdShouldReturn400(java.lang.String)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Verify that invalid author IDs return 400 Bad Request","status":"passed","steps":[],"attachments":[{"uid":"d00ed59f217e0c17","name":"Request","source":"d00ed59f217e0c17.html","type":"text/html","size":546},{"uid":"19832d684cbf45cb","name":"HTTP/1.1 400 Bad Request","source":"19832d684cbf45cb.html","type":"text/html","size":760}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"logTestFinish","time":{"start":1759838232928,"stop":1759838232929,"duration":1},"status":"passed","steps":[{"name":"Finish test","time":{"start":1759838232928,"stop":1759838232929,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'DELETE /Authors/! should return 400 Bad Request', tags = [], testClass = class com.fakeRestApi.tests.author.DeleteAuthorsTests, testMethod = void com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteInvalidAuthorIdShouldReturn400(java.lang.String)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"tearDown","time":{"start":1759838234406,"stop":1759838234406,"duration":0},"status":"passed","steps":[{"name":"Tear down test environment","time":{"start":1759838234406,"stop":1759838234406,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.fakeRestApi.tests.author.DeleteAuthorsTests]/[test-template:checkDeleteInvalidAuthorIdShouldReturn400(java.lang.String)]/[test-template-invocation:#2]"},{"name":"feature","value":"Authors API"},{"name":"story","value":"Delete Authors"},{"name":"epic","value":"Fake REST API tests"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2818@runnervmwhb2z.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.fakeRestApi.tests.author.DeleteAuthorsTests"},{"name":"testClass","value":"com.fakeRestApi.tests.author.DeleteAuthorsTests"},{"name":"testMethod","value":"checkDeleteInvalidAuthorIdShouldReturn400"},{"name":"suite","value":"com.fakeRestApi.tests.author.DeleteAuthorsTests"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"!"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":4},"items":[{"uid":"52f493b697a7995","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/16/#testresult/52f493b697a7995","status":"passed","time":{"start":1759837989407,"stop":1759837989712,"duration":305}},{"uid":"56910b0cdf70ab17","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/15/#testresult/56910b0cdf70ab17","status":"passed","time":{"start":1759837724514,"stop":1759837724835,"duration":321}},{"uid":"e2f4ea5dd66442ef","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/14/#testresult/e2f4ea5dd66442ef","status":"passed","time":{"start":1759835552499,"stop":1759835552806,"duration":307}}]},"tags":[]},"source":"779d0025f32b4073.json","parameterValues":["!"]}