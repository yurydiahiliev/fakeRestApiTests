{"uid":"1d2355f578dc5306","name":"checkDeleteInvalidAuthorIdShouldReturn400(String) DELETE /Authors/$ should return 400 Bad Request","fullName":"com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteInvalidAuthorIdShouldReturn400","historyId":"1b5e121776aecb7303c5b121583965e0","time":{"start":1759838232931,"stop":1759838233288,"duration":357},"description":"Verify that invalid author IDs return 400 Bad Request","descriptionHtml":"<p>Verify that invalid author IDs return 400 Bad Request</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"initApiClients","time":{"start":1759838228682,"stop":1759838228684,"duration":2},"status":"passed","steps":[{"name":"Initialize API clients","time":{"start":1759838228682,"stop":1759838228684,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"logTestStart","time":{"start":1759838232932,"stop":1759838232932,"duration":0},"status":"passed","steps":[{"name":"Start test","time":{"start":1759838232932,"stop":1759838232932,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'DELETE /Authors/$ should return 400 Bad Request', tags = [], testClass = class com.fakeRestApi.tests.author.DeleteAuthorsTests, testMethod = void com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteInvalidAuthorIdShouldReturn400(java.lang.String)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Verify that invalid author IDs return 400 Bad Request","status":"passed","steps":[],"attachments":[{"uid":"77b8b922e9b309d4","name":"Request","source":"77b8b922e9b309d4.html","type":"text/html","size":546},{"uid":"2bb0b08fc5237ba2","name":"HTTP/1.1 400 Bad Request","source":"2bb0b08fc5237ba2.html","type":"text/html","size":760}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"logTestFinish","time":{"start":1759838233288,"stop":1759838233288,"duration":0},"status":"passed","steps":[{"name":"Finish test","time":{"start":1759838233288,"stop":1759838233288,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"testInfo","value":"DefaultTestInfo [displayName = 'DELETE /Authors/$ should return 400 Bad Request', tags = [], testClass = class com.fakeRestApi.tests.author.DeleteAuthorsTests, testMethod = void com.fakeRestApi.tests.author.DeleteAuthorsTests.checkDeleteInvalidAuthorIdShouldReturn400(java.lang.String)]"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"tearDown","time":{"start":1759838234406,"stop":1759838234406,"duration":0},"status":"passed","steps":[{"name":"Tear down test environment","time":{"start":1759838234406,"stop":1759838234406,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.fakeRestApi.tests.author.DeleteAuthorsTests]/[test-template:checkDeleteInvalidAuthorIdShouldReturn400(java.lang.String)]/[test-template-invocation:#3]"},{"name":"feature","value":"Authors API"},{"name":"story","value":"Delete Authors"},{"name":"epic","value":"Fake REST API tests"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2818@runnervmwhb2z.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.fakeRestApi.tests.author.DeleteAuthorsTests"},{"name":"testClass","value":"com.fakeRestApi.tests.author.DeleteAuthorsTests"},{"name":"testMethod","value":"checkDeleteInvalidAuthorIdShouldReturn400"},{"name":"suite","value":"com.fakeRestApi.tests.author.DeleteAuthorsTests"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"$"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":4},"items":[{"uid":"d1ec32638b1595d9","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/16/#testresult/d1ec32638b1595d9","status":"passed","time":{"start":1759837989715,"stop":1759837990022,"duration":307}},{"uid":"db1c50294d05436e","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/15/#testresult/db1c50294d05436e","status":"passed","time":{"start":1759837724838,"stop":1759837725143,"duration":305}},{"uid":"b6e7edf6c0161515","reportUrl":"https://yurydiahiliev.github.io/fakeRestApiTests/14/#testresult/b6e7edf6c0161515","status":"passed","time":{"start":1759835552810,"stop":1759835553122,"duration":312}}]},"tags":[]},"source":"1d2355f578dc5306.json","parameterValues":["$"]}